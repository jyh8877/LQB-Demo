C51 COMPILER V9.59.0.0   MAIN                                                              01/18/2025 11:56:41 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\C51\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware;.\User) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          unsigned char LedBuf[8]={1,1,1,1,0,0,0,0},SegBuf[8] = {16,16,16,16,16,16,16,16},
   3          Time[3]={11,22,33},RecTime[3];
   4          unsigned char UlDis;
   5          float Temper;
   6          unsigned int TemperShow,Frep;
   7          unsigned int Time1s;
   8          void Timer0_Init(void)          //100微秒@12.000MHz
   9          {
  10   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  11   1              TMOD &= 0xF0;                   //设置定时器模式
  12   1          TMOD |= 0x05;
  13   1              TL0 = 0x00;                             //设置定时初始值
  14   1              TH0 = 0x00;                             //设置定时初始值
  15   1              TF0 = 0;                                //清除TF0标志
  16   1              TR0 = 1;                                //定时器0开始计时
  17   1      }
  18          
  19          void Timer1_Init(void)          //1毫秒@12.000MHz
  20          {
  21   1              AUXR &= 0xBF;                   //定时器时钟12T模式
  22   1              TMOD &= 0x0F;                   //设置定时器模式
  23   1              TL1 = 0x18;                             //设置定时初始值
  24   1              TH1 = 0xFC;                             //设置定时初始值
  25   1              TF1 = 0;                                //清除TF1标志
  26   1              TR1 = 1;                                //定时器1开始计时
  27   1          ET1 = 1;
  28   1          EA = 1;
  29   1      }
  30          void DataProc(void)
  31          {
  32   1          if(Time1s % 150)return;
  33   1          //ReadTime(RecTime);
  34   1          Temper = ReadTemp() ;
  35   1              TemperShow = Temper * 10;
  36   1              
  37   1      }
  38          void KeyProc(void)
  39          {
  40   1      
  41   1          static unsigned int KeyOld,KeyVal,KeyDown,KeyUp;
  42   1          if(Time1s % 20) return;
  43   1          KeyVal = KeyRead();
  44   1          KeyUp = ~KeyVal & (KeyOld ^ KeyVal);
  45   1          KeyDown = KeyVal & (KeyOld ^ KeyVal);
  46   1              KeyOld = KeyVal;
  47   1        
  48   1      }
  49          void SegProc(void)
  50          {
  51   1          if(Time1s % 20) return;
  52   1          // SegBuf[7] = RecTime[2] % 10;
  53   1          // SegBuf[6] = RecTime[2] / 10;
  54   1          // SegBuf[5] = 17;
C51 COMPILER V9.59.0.0   MAIN                                                              01/18/2025 11:56:41 PAGE 2   

  55   1          // SegBuf[4] = RecTime[1] % 10;
  56   1          // SegBuf[3] = RecTime[1] / 10;
  57   1          // SegBuf[2] = 17;
  58   1          
  59   1          SegBuf[7] = Frep         % 10;
  60   1          SegBuf[6] = (Frep   / 10 % 10) ;
  61   1          SegBuf[5] = Frep   / 100 %10;
  62   1          SegBuf[4] = Frep  / 1000 %10;
  63   1          SegBuf[3] = Frep / 10000;
  64   1      } 
  65          void main()
  66          {
  67   1          SetTime(Time);
  68   1              Timer0_Init();
  69   1          Timer1_Init();
  70   1          while(1)
  71   1          {
  72   2              DataProc();
  73   2              KeyProc();
  74   2              SegProc();
  75   2          }
  76   1      }
  77          void Routine1(void) interrupt 3 
  78          {
  79   1          static unsigned char SegPos = 0;
  80   1          Time1s++;
  81   1          if(Time1s == 1000)
  82   1          {
  83   2              Frep = ((TH0 << 8) | TL0);
  84   2              TH0 = TL0 = 0;
  85   2              Time1s = 0;
  86   2          }
  87   1          LedDisp(LedBuf);
  88   1          SegPos = (++SegPos) % 8;
  89   1          if(SegBuf[SegPos] > 20)
  90   1              SegDisp(SegPos,SegBuf[SegPos]-'.',1);
  91   1          else
  92   1              SegDisp(SegPos,SegBuf[SegPos],0);
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
